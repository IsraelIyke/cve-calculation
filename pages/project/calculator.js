import Link from "next/link";
import { useState } from "react";

export default function Calculator() {
  const [mixRatio, setMixRatio] = useState({
    cement: 1,
    fine: 2,
    coarse: 4,
  });
  const [moulds, setMoulds] = useState();
  const [from, setFrom] = useState();
  const [to, setTo] = useState();
  const [calculate, setCalculate] = useState();
  const [percentInterval, setPercentInterval] = useState();

  let ratio = [from];
  let diff = to - from;
  let itr = diff / 0.05 + 1;

  for (let i = 1; i <= itr; i++) {
    let element = Number(from) + Number(0.05) * Number(i);
    let elem = Math.round(element * 100) / 100;
    ratio.push(elem);
  }

  const sumRatio = mixRatio.cement + mixRatio.fine + mixRatio.coarse;
  const cement = (mixRatio.cement / sumRatio) * 1.54;
  const fine = (mixRatio.fine / sumRatio) * 1.54;
  const coarse = (mixRatio.coarse / sumRatio) * 1.54;
  const volume = moulds * 0.0034;
  const volumeCement = cement * volume;
  const volumeFine = fine * volume;
  const volumeCoarse = coarse * volume;
  let percentReplacement = [];
  const bagsCement = volumeCement / 0.035;
  const bagsFine = volumeFine / 0.035;
  const bagsCoarse = volumeCoarse / 0.035;

  function Submit() {
    if ((moulds && from && to && interval && percentInterval) == null) {
      if (moulds == null || moulds == undefined) {
        document.getElementById("mould").style.border = "solid #FF0000";
      }
      if (percentInterval == null || percentInterval == undefined) {
        document.getElementById("percent").style.border = " solid #FF0000";
      }
      if (from == null || from == undefined) {
        document.getElementById("from").style.border = " solid #FF0000";
      }
      if (to == null || to == undefined) {
        document.getElementById("to").style.border = " solid #FF0000";
      }
    } else {
      const data = document.querySelectorAll(
        "#mould, #percent, #from, #to, #interval"
      );

      data.forEach((element) => {
        element.style.border = "1px solid black";
      });
      setCalculate(true);
    }
  }
  for (let i = 1; i <= 100 / percentInterval; i++) {
    percentReplacement.push(i * percentInterval);
  }
  let display = percentReplacement.map((element) => {
    return (
      <div key={element}>
        <h4>{element} percent replacement of coarse agg.</h4>
        <p>
          volume of coarse agg. = {volumeCoarse} x {(100 - element) / 100} =
          {volumeCoarse * ((100 - element) / 100)}m<sup>3</sup>
        </p>
        <p>
          volume of EPS = {volumeCoarse} x {element / 100} =
          {volumeCoarse * (element / 100)}m<sup>3</sup>
        </p>
      </div>
    );
  });

  let dis = percentReplacement.map((element) => {
    return (
      <div key={element}>
        <p>
          <b> coarse agg after {element} percent replacement</b> ={" "}
          {volumeCoarse * ((100 - element) / 100)}/0.035 ={" "}
          {(volumeCoarse * ((100 - element) / 100)) / 0.035} bags of coarse
          aggregate (gravel)
        </p>
      </div>
    );
  });

  let water = ratio.map((element) => {
    return (
      <div key={element}>
        <h4>At {element} W/C ratio</h4>
        <p>water = {element} x cement</p>
        <p>
          water = {element} x {volumeCement}m<sup>3</sup>
        </p>{" "}
        = {element * volumeCement}
        <p>Water in ltr: {element * volumeCement * 1000} litre</p>
      </div>
    );
  });
  return (
    <div className="calc-container">
      <h3>
        For {mixRatio.cement}:{mixRatio.fine}:{mixRatio.coarse} Mix Ratio
      </h3>
      <p>
        1m<sup>3</sup> of wet concrete assuming that total dry volume of
        material required = 1.54m<sup>3</sup>
      </p>
      <p>
        Enter Number of moulds/pieces
        <input
          id="mould"
          type="number"
          value={moulds}
          onChange={(e) => setMoulds(e.target.value)}
          placeholder="Example 200 pieces"
        />
      </p>
      <p>
        Enter Percentage Replacement interval
        <input
          id="percent"
          type="number"
          value={percentInterval}
          onChange={(e) => setPercentInterval(e.target.value)}
          placeholder="Example 10 intervals"
        />
      </p>
      <p>
        Enter W/C ratio
        <input
          id="from"
          type="number"
          value={from}
          onChange={(e) => setFrom(e.target.value)}
          placeholder="From example 0.4 W/C"
        />
        <input
          id="to"
          type="number"
          value={to}
          onChange={(e) => setTo(e.target.value)}
          placeholder="To example 0.9 W/C"
        />
      </p>

      <button onClick={Submit}>calculate</button>
      {calculate && (
        <div>
          <p>
            {mixRatio.cement} + {mixRatio.fine} + {mixRatio.coarse} = {sumRatio}
          </p>
          <p>
            cement: {mixRatio.cement}/{sumRatio} x 1.54 = {cement}m<sup>3</sup>
          </p>
          <p>
            fine agg: {mixRatio.fine}/{sumRatio} x 1.54 = {fine}m<sup>3</sup>
          </p>
          <p>
            coarse agg: {mixRatio.coarse}/{sumRatio} x 1.54 = {coarse}m
            <sup>3</sup>
          </p>

          <h3>
            For batch mix of {moulds} moulds/pieces of 0.0034m<sup>3</sup> cube
            (ie 0.15 x 0.15 x 0.15 = 0.0034m<sup>3</sup>)
          </h3>
          <p>
            Total volume for {moulds} moulds/pieces = {moulds} x 0.0034 ={" "}
            {volume}m<sup>3</sup>
          </p>
          <p>
            Total volume of cement in the {moulds} moulds/pieces = {cement} x
            {volume} = {volumeCement}m<sup>3</sup>
          </p>
          <p>
            Total volume of fine agg in the {moulds} moulds/pieces = {fine} x
            {volume} = {volumeFine}m<sup>3</sup>
          </p>
          <p>
            Total volume of coarse agg in the {moulds} moulds/pieces = {coarse}{" "}
            x{volume}= {volumeCoarse}m<sup>3</sup>
          </p>

          <h3>
            Replacement of coarse aggregate with Expanded Polystyrene concrete
            for
            {moulds} moulds/pieces
          </h3>
          {display}

          <h3>
            Quantity/volume of cement, fine agg., coarse agg. for {moulds} cubes
          </h3>
          <p>
            cement: {volumeCement}/0.035 = {bagsCement} bags of cement
          </p>
          <p>
            fine agg: {volumeFine}/0.035 = {bagsFine} bags of fine aggregate
            (sand)
          </p>
          <p>
            coarse agg before replacement: {volumeCoarse}/0.035 = {bagsCoarse}{" "}
            bags of coarse aggregate (gravel)
          </p>
          {dis}
          <h3>Water Quantity</h3>
          {water}
        </div>
      )}
    </div>
  );
}
