import Link from "next/link";
import { useState } from "react";

export default function Calc() {
  const [mixRatio, setMixRatio] = useState({
    cement: 1,
    fine: 2,
    coarse: 4,
  });
  const [moulds, setMould] = useState(() => {
    return null;
  });
  const [waterFrom, setWaterRatioFrom] = useState(() => {
    return null;
  });
  const [waterTo, setWaterRatioTo] = useState(() => {
    return null;
  });
  const [percentInterval, setPercentInterval] = useState(() =>
    console.log("hello")
  );

  let ratio = [parseFloat(waterFrom)];
  let diff = parseFloat(waterTo) - parseFloat(waterFrom);
  let itr = diff / 0.05 + 1;

  for (let i = 1; i <= itr; i++) {
    let element = Number(from) + Number(0.05) * Number(i);
    let elem = Math.round(element * 100) / 100;
    ratio.push(elem);
  }

  const sumRatio = mixRatio.cement + mixRatio.fine + mixRatio.coarse;
  const cement = (mixRatio.cement / sumRatio) * 1.54;
  const fine = (mixRatio.fine / sumRatio) * 1.54;
  const coarse = (mixRatio.coarse / sumRatio) * 1.54;
  const volume = parseFloat(moulds) * 0.0034;
  const volumeCement = cement * volume;
  const volumeFine = fine * volume;
  const volumeCoarse = coarse * volume;
  let percentReplacement = [];
  const bagsCement = volumeCement / 0.035;
  const bagsFine = volumeFine / 0.035;
  const bagsCoarse = volumeCoarse / 0.035;

  function handleMoulds(e) {
    setMould(e.target.value);
  }
  function handleWaterFrom(e) {
    setWaterRatioFrom(e.target.value);
  }
  function handleWaterTo(e) {
    setWaterRatioTo(e.target.value);
  }
  for (let i = 1; i <= 10; i++) {
    percentReplacement.push(i * percentInterval);
  }
  let display = percentReplacement.map((element) => {
    return (
      <div key={element}>
        <h4>{element} replacement of coarse agg.</h4>
        <p>
          volume of coarse agg. = {volumeCoarse} x {(100 - element) / 100} =
          {volumeCoarse * ((100 - element) / 100)}m<sup>3</sup>
        </p>
        <p>
          volume of EPS = {volumeCoarse} x {element / 100} =
          {volumeCoarse * (element / 100)}m<sup>3</sup>
        </p>
      </div>
    );
  });

  let dis = percentReplacement.map((element) => {
    return (
      <div key={element}>
        <p>
          <b> coarse agg after {element} replacement</b> ={" "}
          {volumeCoarse * ((100 - element) / 100)}/0.035 ={" "}
          {(volumeCoarse * ((100 - element) / 100)) / 0.035} bags of coarse
          aggregate (gravel)
        </p>
      </div>
    );
  });

  let water = ratio.map((element) => {
    return (
      <div key={element}>
        <h4>At {element} W/C ratio</h4>
        <p>water = {element} x cement</p>
        <p>
          water = {element} x {volumeCement}m<sup>3</sup>
        </p>{" "}
        = {element * volumeCement}
        <p>Water in ltr: {element * volumeCement * 1000} litre</p>
      </div>
    );
  });
  return (
    <div className="calc-container">
      <h3>
        For {mixRatio.cement}:{mixRatio.fine}:{mixRatio.coarse} Mix Ratio
      </h3>
      <p>
        1m<sup>3</sup> of wet concrete assuming that total dry volume of
        material required = 1.54m<sup>3</sup>
      </p>

      {/* This input field handle the number of moulds */}
      <label>Enter Number of moulds/pieces</label>
      <input
        type="text"
        value={moulds}
        name="mould"
        placeholder="Enter Number of moulds/pieces"
        onChange={handleMoulds}
      />
      {/* This input handles the mix ratio */}
      {/* <label>Enter Mix Ratio</label>
    <input type="text" value={mixRatio} name="ratio" placeholder="Enter Mix Ratio" onChange={handleRatio}/> */}
      {/* This input handles water to cement ratio */}
      <label>Enter Water to Cement Ratio</label>
      <div style={{ display: "flex", alignItems: "center" }}>
        from
        <input
          type="text"
          value={waterFrom}
          name="waterRatio"
          placeholder="W/C From 0.4"
          onChange={handleWaterFrom}
          style={{ width: "8rem" }}
        />{" "}
        to
        <input
          type="text"
          value={waterTo}
          name="waterRatio"
          placeholder="W/C To 0.9"
          onChange={handleWaterTo}
          style={{ width: "8rem" }}
        />
      </div>
      {/* This input handles percent replacement interval */}
      {/* <label>Enter Percentage Replacement Interval</label>
    <input type="text" value={percents} name="percent" placeholder="Enter Percentage Replacement Interval" onChange={handleMoulds}/> */}
      {/* This input handles the mass of one styrofoam/polystyrene */}
      {/* <label>Enter Mass of One Styrofoam/polystyrene</label>
    <input type="text" value={styro} name="styro" placeholder="Enter Mass of One Styrofoam/polystyrene" onChange={handleMoulds}/> */}

      <p>
        {mixRatio.cement} + {mixRatio.fine} + {mixRatio.coarse} = {sumRatio}
      </p>
      <p>
        cement: {mixRatio.cement}/{sumRatio} x 1.54 = {cement}m<sup>3</sup>
      </p>
      <p>
        fine agg: {mixRatio.fine}/{sumRatio} x 1.54 = {fine}m<sup>3</sup>
      </p>
      <p>
        coarse agg: {mixRatio.coarse}/{sumRatio} x 1.54 = {coarse}m<sup>3</sup>
      </p>

      <h3>
        For batch mix of {moulds} moulds/pieces of 0.0034m<sup>3</sup> cube (ie
        0.15 x 0.15 x 0.15 = 0.0034m<sup>3</sup>)
      </h3>
      <p>
        Total volume for {moulds} moulds/pieces = {moulds} x 0.0034 = {volume}m
        <sup>3</sup>
      </p>
      <p>
        Total volume of cement in the {moulds} moulds/pieces = {cement} x
        {volume} = {volumeCement}m<sup>3</sup>
      </p>
      <p>
        Total volume of fine agg in the {moulds} moulds/pieces = {fine} x
        {volume} = {volumeFine}m<sup>3</sup>
      </p>
      <p>
        Total volume of coarse agg in the {moulds} moulds/pieces = {coarse} x
        {volume}= {volumeCoarse}m<sup>3</sup>
      </p>

      <h3>
        Replacement of coarse aggregate with Expanded Polystyrene concrete for
        {moulds} moulds/pieces
      </h3>
      {display}

      <h3>
        Quantity/volume of cement, fine agg., coarse agg. for {moulds} cubes
      </h3>
      <p>
        cement: {volumeCement}/0.035 = {bagsCement} bags of cement
      </p>
      <p>
        fine agg = {volumeFine}/0.035 = {bagsFine} bags of fine aggregate (sand)
      </p>
      <p>
        coarse agg before replacement = {volumeCoarse}/0.035 = {bagsCoarse} bags
        of coarse aggregate (gravel)
      </p>
      {dis}
      <h3>Water Quantity</h3>
      {water}
    </div>
  );
}
