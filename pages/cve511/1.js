import Link from "next/link";
import { useState } from "react";

export default function Calc() {
  const [modulus, setModulus] = useState();
  const [inertia, setInertia] = useState();
  const [area, setArea] = useState();
  const [length, setLength] = useState();
  const [cos, setCos] = useState();
  const [sine, setSine] = useState();

  let areaModulus = (area * modulus) / length;
  let inertiaModulus = modulus * inertia;
  let twelveInertiaModulus = (12 * inertiaModulus) / Math.pow(length, 3);
  let sixInertiaModulus = (6 * inertiaModulus) / Math.pow(length, 2);
  let fourInertiaModulus = (4 * inertiaModulus) / length;
  let twoInertiaModulus = (2 * inertiaModulus) / length;

  return (
    <div className="calc-container">
      <input
        type="text"
        placeholder="enter E"
        value={modulus}
        onChange={(e) => setModulus(e.target.value)}
      />
      <input
        type="text"
        placeholder="enter I"
        value={inertia}
        onChange={(e) => setInertia(e.target.value)}
      />
      <input
        type="text"
        placeholder="enter A"
        value={area}
        onChange={(e) => setArea(e.target.value)}
      />
      <input
        type="text"
        placeholder="enter L"
        value={length}
        onChange={(e) => setLength(e.target.value)}
      />
      <input
        type="text"
        placeholder="enter Cos&theta;"
        value={cos}
        onChange={(e) => setCos(e.target.value)}
      />
      <input
        type="text"
        placeholder="enter Sin&theta;"
        value={sine}
        onChange={(e) => setSine(e.target.value)}
      />
      <div style={{ backgroundColor: "#f0f0f0" }}>
        <p>
          1,1 =
          {areaModulus * Math.pow(cos, 2) +
            twelveInertiaModulus * Math.pow(sine, 2)}
        </p>
        <p>1,2 = {(areaModulus - twelveInertiaModulus) * (cos * sine)}</p>
        <p>1,3 = {-(sixInertiaModulus * sine)}</p>
        <p>
          1,4 =
          {
            -(
              areaModulus * Math.pow(cos, 2) +
              twelveInertiaModulus * Math.pow(sine, 2)
            )
          }
        </p>
        <p>1,5 = {-(areaModulus - twelveInertiaModulus) * (cos * sine)}</p>
        <p>1,6 = {-(sixInertiaModulus * sine)}</p>
      </div>
      <div>
        <p>2,1 = {(areaModulus - twelveInertiaModulus) * (cos * sine)}</p>
        <p>
          2,2 =
          {areaModulus * Math.pow(sine, 2) +
            twelveInertiaModulus * Math.pow(cos, 2)}
        </p>
        <p>2,3 = {-(sixInertiaModulus * cos)}</p>
        <p>2,4 = {-(areaModulus - twelveInertiaModulus) * (cos * sine)}</p>
        <p>
          2,5 =
          {
            -(
              areaModulus * Math.pow(sine, 2) +
              twelveInertiaModulus * Math.pow(cos, 2)
            )
          }
        </p>
        <p>2,6 = {sixInertiaModulus * cos}</p>
      </div>
      <div style={{ backgroundColor: "#f0f0f0" }}>
        <p>3,1 = {-(sixInertiaModulus * sine)}</p>
        <p>3,2 = {sixInertiaModulus * cos}</p>
        <p>3,3 = {fourInertiaModulus}</p>
        <p>3,4 = {sixInertiaModulus * sine}</p>
        <p>3,5 = {-(sixInertiaModulus * cos)}</p>
        <p>3,6 = {twoInertiaModulus}</p>
      </div>
      <div>
        <p>
          4,1 =
          {
            -(
              areaModulus * Math.pow(cos, 2) +
              twelveInertiaModulus * Math.pow(sine, 2)
            )
          }
        </p>
        <p>4,2 = {-((areaModulus - twelveInertiaModulus) * (cos * sine))}</p>
        <p>4,3 = {sixInertiaModulus * sine}</p>
        <p>
          4,4 =
          {areaModulus * Math.pow(cos, 2) +
            twelveInertiaModulus * Math.pow(sine, 2)}
        </p>
        <p>4,5 = {(areaModulus - twelveInertiaModulus) * (cos * sine)}</p>
        <p>4,6 = {sixInertiaModulus * sine}</p>
      </div>

      <div style={{ backgroundColor: "#f0f0f0" }}>
        <p>5,1 = {-((areaModulus - twelveInertiaModulus) * (cos * sine))}</p>
        <p>
          5,2 =
          {
            -(
              areaModulus * Math.pow(sine, 2) +
              twelveInertiaModulus * Math.pow(cos, 2)
            )
          }
        </p>
        <p>5,3 = {-(sixInertiaModulus * cos)}</p>
        <p>5,4 = {(areaModulus - twelveInertiaModulus) * (cos * sine)}</p>
        <p>
          5,5 =
          {areaModulus * Math.pow(sine, 2) +
            twelveInertiaModulus * Math.pow(cos, 2)}
        </p>
        <p>5,6 = {-(sixInertiaModulus * cos)}</p>
      </div>
      <div>
        <p>6,1 = {-(sixInertiaModulus * sine)}</p>
        <p>6,2 = {sixInertiaModulus * cos}</p>
        <p>6,3 = {twoInertiaModulus}</p>
        <p>6,4 = {sixInertiaModulus * sine}</p>
        <p>6,5 = {-(sixInertiaModulus * cos)}</p>
        <p>6,6 = {fourInertiaModulus}</p>
      </div>
    </div>
  );
}
